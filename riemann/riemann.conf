riemann.conf
; -*- mode: clojure; -*-
; vim: filetype=clojure

(logging/init {:file "riemann.log"})

; Listen on the local interface over TCP (5555), UDP (5555), and websockets
; (5556)
(let [host "127.0.0.1"]
  (tcp-server {:host host})
  (udp-server {:host host})
  (ws-server  {:host host})
)

; Expire old events from the index every 5 seconds.
(periodically-expire 5 {:keep-keys [:host :service :tags]})

; load our helper config items
(inlude "conf.d/")

(let [index (index)]
  ; Inbound events will be passed to these streams:
  (streams
    ; debug print anything entering the stream
    ;prn

    ; set default time-to-live to 60 seconds
    (default :ttl 60
      ; index immediately
      index

      (where (not (expired? event))
        (changed-state {:init "ok"}
          (stable 60 :state
            alert-ops
          )
        )
      ) ; where not expired

      (expired
        alert-ops
      )

    ) ; default ttl
  ) ; streams
) ; let
